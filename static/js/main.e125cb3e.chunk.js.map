{"version":3,"sources":["components/todoForm.js","components/task.js","components/todoList.js","App.js","index.js"],"names":["TodoForm","state","id","text","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","complete","Form","this","className","Input","type","onChange","placeholder","Button","color","React","Component","task","onClick","toggleComplete","onDelete","TodoList","tasks","addTask","newTask","map","filter","Row","Col","xs","lg","Tabs","defaultActiveKey","Tab","eventKey","title","handleDeleteTask","key","App","ReactDOM","render","document","getElementById"],"mappings":"6TAGqBA,E,2MACjBC,MAAQ,CACJC,GAAI,EACJC,KAAM,I,EAGVC,aAAe,SAAAC,GACX,EAAKC,SAAL,eACKD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,S,EAI1CC,aAAe,SAACL,GACZA,EAAMM,iBACkB,KAApB,EAAKV,MAAME,OACX,EAAKS,MAAMC,SAAS,CAChBX,GAAI,EAAKD,MAAMC,GAAK,EACpBC,KAAM,EAAKF,MAAME,KACjBW,UAAU,IAEd,EAAKR,SAAS,CACVJ,GAAI,EAAKD,MAAMC,GAAK,EACpBC,KAAM,O,wEAMd,OACI,6BACI,kBAACY,EAAA,EAAD,CAAMF,SAAUG,KAAKN,cACjB,wBAAIO,UAAU,oBAAd,cACA,yBAAKA,UAAU,UACX,kBAACC,EAAA,EAAD,CACID,UAAU,YACVE,KAAK,OACLX,KAAK,OACLC,MAAOO,KAAKf,MAAME,KAClBiB,SAAUJ,KAAKZ,aACfiB,YAAY,aAEhB,kBAACC,EAAA,EAAD,CAAQC,MAAM,WAAd,gB,GAzCcC,IAAMC,WCF7B,WAAAb,GAAK,OAChB,yBAAKK,UAAU,eACX,yBACIA,UAAWL,EAAMc,KAAKZ,SAAW,WAAa,GAC9Ca,QAASf,EAAMgB,gBACdhB,EAAMc,KAAKvB,MAEhB,4BAAQwB,QAASf,EAAMiB,SAAUZ,UAAU,SAAQ,qC,gCCAtCa,E,2MACjB7B,MAAQ,CACJ8B,MAAO,I,EAGXC,QAAU,SAACN,GACP,IAAMO,EAAO,CAAIP,GAAJ,mBAAa,EAAKzB,MAAM8B,QACrC,EAAKzB,SAAS,CACVyB,MAAOE,K,EAIfL,eAAiB,SAAC1B,GACd,EAAKI,SAAS,CACVyB,MAAO,EAAK9B,MAAM8B,MAAMG,KAAI,SAAAR,GACxB,OAAIA,EAAKxB,KAAOA,EACL,eACAwB,EADP,CAEIZ,UAAWY,EAAKZ,WAGbY,Q,gFAQNxB,GACbc,KAAKV,SAAS,CACVyB,MAAOf,KAAKf,MAAM8B,MAAMI,QAAO,SAAAT,GAAI,OAAIA,EAAKxB,KAAOA,S,+BAIjD,IAAD,OACL,OACI,kBAACkC,EAAA,EAAD,CAAKnB,UAAU,8BACX,kBAACoB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGtB,UAAU,aAC1B,kBAAC,EAAD,CAAUJ,SAAUG,KAAKgB,UACzB,kBAACQ,EAAA,EAAD,CAAMC,iBAAiB,OAAOvC,GAAG,2BAA4Be,UAAU,QACnE,kBAACyB,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,SACvB,yBAAK3B,UAAU,SACVD,KAAKf,MAAM8B,MAAMG,KAAI,SAAAR,GAClB,IAAqB,IAAlBA,EAAKZ,SACR,OAAO,kBAAC,EAAD,CACHc,eAAgB,kBAAM,EAAKA,eAAeF,EAAKxB,KAC/C2B,SAAU,kBAAM,EAAKgB,iBAAiBnB,EAAKxB,KAC3C4C,IAAKpB,EAAKxB,GACVwB,KAAMA,SAItB,kBAACgB,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,QACtB5B,KAAKf,MAAM8B,MAAMG,KAAI,SAAAR,GAClB,IAAqB,IAAlBA,EAAKZ,SACJ,OAAO,kBAAC,EAAD,CACHc,eAAgB,kBAAM,EAAKA,eAAeF,EAAKxB,KAC/C2B,SAAU,kBAAM,EAAKgB,iBAAiBnB,EAAKxB,KAC3C4C,IAAKpB,EAAKxB,GACVwB,KAAMA,e,GA5DRF,IAAMC,WCK7BsB,MARf,WACE,OACE,yBAAK9B,UAAU,aACd,kBAAC,EAAD,Q,MCDL+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e125cb3e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button } from 'reactstrap';\r\n\r\nexport default class TodoForm extends React.Component {\r\n    state = {\r\n        id: 0,\r\n        text: \"\"\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.text !== \"\") {\r\n            this.props.onSubmit({\r\n                id: this.state.id + 1,\r\n                text: this.state.text,\r\n                complete: false\r\n            })\r\n            this.setState({\r\n                id: this.state.id + 1,\r\n                text: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <h3 className=\"text-center py-3\">What to do</h3>\r\n                    <div className=\"d-flex\">\r\n                        <Input\r\n                            className=\"inputTask\"\r\n                            type=\"text\"\r\n                            name=\"text\"\r\n                            value={this.state.text}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Add task\"\r\n                        />\r\n                        <Button color=\"primary\"> Add </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nexport default props => (\r\n    <div className=\"task d-flex\">\r\n        <div\r\n            className={props.task.complete ? \"taskDone\" : \"\"}\r\n            onClick={props.toggleComplete}>\r\n            {props.task.text}\r\n        </div>\r\n        <button onClick={props.onDelete} className=\"close\"><div>x</div></button>\r\n    </div>\r\n)","import React from \"react\";\r\nimport TodoForm from \"./todoForm\";\r\nimport Task from \"./task\";\r\n\r\nimport { Container, Row, Col} from 'reactstrap';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\n\r\nexport default class TodoList extends React.Component {\r\n    state = {\r\n        tasks: []\r\n    }\r\n\r\n    addTask = (task) => {\r\n        const newTask = [task, ...this.state.tasks];\r\n        this.setState({\r\n            tasks: newTask\r\n        })\r\n    }\r\n\r\n    toggleComplete = (id) => {\r\n        this.setState({\r\n            tasks: this.state.tasks.map(task => {\r\n                if (task.id === id) {\r\n                    return {\r\n                        ...task,\r\n                        complete: !task.complete\r\n                    };\r\n                } else {\r\n                    return task;\r\n                }\r\n                }\r\n            )\r\n            }\r\n        )\r\n    }\r\n\r\n    handleDeleteTask(id) {\r\n        this.setState({\r\n            tasks: this.state.tasks.filter(task => task.id !== id)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"justify-content-md-center \">\r\n                <Col xs={12} lg={6} className=\"form my-3\" >\r\n                    <TodoForm onSubmit={this.addTask} />\r\n                    <Tabs defaultActiveKey=\"todo\" id=\"uncontrolled-tab-example\"  className=\"mt-3\">\r\n                        <Tab eventKey=\"todo\" title=\"To Do\">\r\n                            <div className=\"tasks\">\r\n                                {this.state.tasks.map(task => {\r\n                                    if(task.complete === false)\r\n                                    return <Task\r\n                                        toggleComplete={() => this.toggleComplete(task.id)}\r\n                                        onDelete={() => this.handleDeleteTask(task.id)}\r\n                                        key={task.id}\r\n                                        task={task} />\r\n                                })}\r\n                            </div>\r\n                        </Tab>\r\n                        <Tab eventKey=\"done\" title=\"Done\">\r\n                            {this.state.tasks.map(task => {\r\n                                if(task.complete === true)\r\n                                    return <Task\r\n                                        toggleComplete={() => this.toggleComplete(task.id)}\r\n                                        onDelete={() => this.handleDeleteTask(task.id)}\r\n                                        key={task.id}\r\n                                        task={task} />\r\n                            })}\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport TodoList from \"./components/todoList\";\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n     <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}